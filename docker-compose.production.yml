version: '3.8'

services:
  # MySQL数据库服务
  db:
    image: mysql:8.0
    container_name: hr_recruitment_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: hr_recruitment
      MYSQL_USER: hr_admin
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - hr_network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hr_recruitment_backend
    restart: always
    depends_on:
      - db
    environment:
      - APP_ENV=production
      - SERVICE_MODE=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=hr_admin
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=hr_recruitment
      - DATABASE_URL=mysql+mysqlconnector://hr_admin:${DB_PASSWORD}@db:3306/hr_recruitment
      - ALIYUN_REGION_ID=${ALIYUN_REGION_ID}
      - ALIYUN_ACCESS_KEY=${ALIYUN_ACCESS_KEY}
      - ALIYUN_ACCESS_SECRET=${ALIYUN_ACCESS_SECRET}
      - ALIYUN_OSS_BUCKET=${ALIYUN_OSS_BUCKET}
      - ALIYUN_OSS_ENDPOINT=${ALIYUN_OSS_ENDPOINT}
      - GPT_API_KEY=${GPT_API_KEY}
      - GPT_API_BASE=${GPT_API_BASE}
      - GPT_MODEL=${GPT_MODEL}
    ports:
      - "8000:8000"
    networks:
      - hr_network
    volumes:
      - backend_logs:/app/logs

  # Nginx服务器（用于前端静态文件）
  nginx:
    image: nginx:alpine
    container_name: hr_recruitment_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - hr_network

networks:
  hr_network:
    driver: bridge

volumes:
  mysql_data:
  backend_logs:
